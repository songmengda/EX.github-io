{"remainingRequest":"/Users/songmengda/Desktop/my/mygithub/EX.github-io/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/songmengda/Desktop/my/mygithub/EX.github-io/src/pages/xin.vue?vue&type=style&index=0&lang=less&rel=stylesheet%2Fless&scope=true&","dependencies":[{"path":"/Users/songmengda/Desktop/my/mygithub/EX.github-io/src/pages/xin.vue","mtime":1557753154880},{"path":"/Users/songmengda/Desktop/my/mygithub/EX.github-io/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songmengda/Desktop/my/mygithub/EX.github-io/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/songmengda/Desktop/my/mygithub/EX.github-io/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/songmengda/Desktop/my/mygithub/EX.github-io/node_modules/less-loader/dist/cjs.js","mtime":1556522973372},{"path":"/Users/songmengda/Desktop/my/mygithub/EX.github-io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songmengda/Desktop/my/mygithub/EX.github-io/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@r: 100;\n.my-index {\n}\n",{"version":3,"sources":["xin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4QA;AACA;AACA","file":"xin.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div class=\"my-index\">\n    <canvas id=\"pinkboard\"></canvas>\n  </div>\n</template>\n\n<script>\n// import { queryCoupon } from '@/api/service.js'\nexport default {\n  components: {\n\n  },\n\n  data () {\n    return {\n    }\n  },\n\n  mounted () {\n\n    var settings = {\n      particles: {\n        length: 500, //最大粒子数\n        duration: 2, //粒子持续时间\n        velocity: 100, //粒子速度，像素/秒\n        effect: -0.75,\n        size: 30, //粒子大小\n      }\n    };\n    (function () {\n      var b = 0;\n      var c = [\"ms\", \"moz\", \"webkit\", \"o\"];\n      for (var a = 0; a < c.length && !window.requestAnimationFrame; ++a) {\n        window.requestAnimationFrame = window[c[a] + \"RequestAnimationFrame\"];\n        window.cancelAnimationFrame = window[c[a] + \"CancelAnimationFrame\"] || window[c[a] + \"CancelRequestAnimationFrame\"]\n      }\n      if (!window.requestAnimationFrame) {\n        window.requestAnimationFrame = function (h) {\n          var d = new Date().getTime();\n          var f = Math.max(0, 16 - (d - b));\n          var g = window.setTimeout(function () {\n            h(d + f)\n          }, f);\n          b = d + f;\n          return g\n        }\n      }\n      if (!window.cancelAnimationFrame) {\n        window.cancelAnimationFrame = function (d) {\n          clearTimeout(d)\n        }\n      }\n    }());\n\n    var Point = (function () {\n      function Point (x, y) {\n        this.x = (typeof x !== 'undefined') ? x : 0;\n        this.y = (typeof y !== 'undefined') ? y : 0;\n      }\n      Point.prototype.clone = function () {\n        return new Point(this.x, this.y);\n      };\n      Point.prototype.length = function (length) {\n        if (typeof length == 'undefined')\n          return Math.sqrt(this.x * this.x + this.y * this.y);\n        this.normalize();\n        this.x *= length;\n        this.y *= length;\n        return this;\n      };\n      Point.prototype.normalize = function () {\n        var length = this.length();\n        this.x /= length;\n        this.y /= length;\n        return this;\n      };\n      return Point;\n    })();\n    var Particle = (function () {\n      function Particle () {\n        this.position = new Point();\n        this.velocity = new Point();\n        this.acceleration = new Point();\n        this.age = 0;\n      }\n      Particle.prototype.initialize = function (x, y, dx, dy) {\n        this.position.x = x;\n        this.position.y = y;\n        this.velocity.x = dx;\n        this.velocity.y = dy;\n        this.acceleration.x = dx * settings.particles.effect;\n        this.acceleration.y = dy * settings.particles.effect;\n        this.age = 0;\n      };\n      Particle.prototype.update = function (deltaTime) {\n        this.position.x += this.velocity.x * deltaTime;\n        this.position.y += this.velocity.y * deltaTime;\n        this.velocity.x += this.acceleration.x * deltaTime;\n        this.velocity.y += this.acceleration.y * deltaTime;\n        this.age += deltaTime;\n      };\n      Particle.prototype.draw = function (context, image) {\n        function ease (t) {\n          return (--t) * t * t + 1;\n        }\n        var size = image.width * ease(this.age / settings.particles.duration);\n        context.globalAlpha = 1 - this.age / settings.particles.duration;\n        context.drawImage(image, this.position.x - size / 2, this.position.y - size / 2, size, size);\n      };\n      return Particle;\n    })();\n    var ParticlePool = (function () {\n      var particles,\n        firstActive = 0,\n        firstFree = 0,\n        duration = settings.particles.duration;\n\n      function ParticlePool (length) {\n        // 创建和填充粒子库\n        particles = new Array(length);\n        for (var i = 0; i < particles.length; i++)\n          particles[i] = new Particle();\n      }\n      ParticlePool.prototype.add = function (x, y, dx, dy) {\n        particles[firstFree].initialize(x, y, dx, dy);\n\n        // 处理循环队列\n        firstFree++;\n        if (firstFree == particles.length) firstFree = 0;\n        if (firstActive == firstFree) firstActive++;\n        if (firstActive == particles.length) firstActive = 0;\n      };\n      ParticlePool.prototype.update = function (deltaTime) {\n        var i;\n\n        // 更新活动粒子\n        if (firstActive < firstFree) {\n          for (i = firstActive; i < firstFree; i++)\n            particles[i].update(deltaTime);\n        }\n        if (firstFree < firstActive) {\n          for (i = firstActive; i < particles.length; i++)\n            particles[i].update(deltaTime);\n          for (i = 0; i < firstFree; i++)\n            particles[i].update(deltaTime);\n        }\n\n        // 删除不活动的粒子\n        while (particles[firstActive].age >= duration && firstActive != firstFree) {\n          firstActive++;\n          if (firstActive == particles.length) firstActive = 0;\n        }\n\n\n      };\n      ParticlePool.prototype.draw = function (context, image) {\n        // 画活动粒子\n        if (firstActive < firstFree) {\n          for (var i = firstActive; i < firstFree; i++)\n            particles[i].draw(context, image);\n        }\n        if (firstFree < firstActive) {\n          for (i = firstActive; i < particles.length; i++)\n            particles[i].draw(context, image);\n          for (i = 0; i < firstFree; i++)\n            particles[i].draw(context, image);\n        }\n      };\n      return ParticlePool;\n    })();\n    (function (canvas) {\n      var context = canvas.getContext('2d'),\n        particles = new ParticlePool(settings.particles.length),\n        particleRate = settings.particles.length / settings.particles.duration, // particles/sec\n        time;\n\n      // 获取heart点位 -PI <= t <= PI\n      function pointOnHeart (t) {\n        return new Point(\n          160 * Math.pow(Math.sin(t), 3),\n          130 * Math.cos(t) - 50 * Math.cos(2 * t) - 20 * Math.cos(3 * t) - 10 * Math.cos(4 * t) + 25\n        );\n      }\n\n      // 使用canvas创建粒子图像\n      var image = (function () {\n        var canvas = document.createElement('canvas'),\n          context = canvas.getContext('2d');\n        canvas.width = settings.particles.size;\n        canvas.height = settings.particles.size;\n        // 创建路径的辅助函数\n        function to (t) {\n          var point = pointOnHeart(t);\n          point.x = settings.particles.size / 2 + point.x * settings.particles.size / 350;\n          point.y = settings.particles.size / 2 - point.y * settings.particles.size / 350;\n          return point;\n        }\n        // 创建路径\n        context.beginPath();\n        var t = -Math.PI;\n        var point = to(t);\n        context.moveTo(point.x, point.y);\n        while (t < Math.PI) {\n          t += 0.01;\n          point = to(t);\n          context.lineTo(point.x, point.y);\n        }\n        context.closePath();\n        // 填充\n        context.fillStyle = '#ea80b0';\n        context.fill();\n        // 创建图片\n        var image = new Image();\n        image.src = canvas.toDataURL();\n        return image;\n      })();\n\n      // 渲染\n      function render () {\n        requestAnimationFrame(render);\n\n        // update time\n        var newTime = new Date().getTime() / 1000,\n          deltaTime = newTime - (time || newTime);\n        time = newTime;\n\n        // clear canvas\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        // 创建新的粒子\n        var amount = particleRate * deltaTime;\n        for (var i = 0; i < amount; i++) {\n          var pos = pointOnHeart(Math.PI - 2 * Math.PI * Math.random());\n          var dir = pos.clone().length(settings.particles.velocity);\n          particles.add(canvas.width / 2 + pos.x, canvas.height / 2 - pos.y, dir.x, -dir.y);\n        }\n\n        // 更新并绘制\n        particles.update(deltaTime);\n        particles.draw(context, image);\n      }\n\n      // 处理canvas大小\n      function onResize () {\n        canvas.width = canvas.clientWidth;\n        canvas.height = canvas.clientHeight;\n      }\n      window.onresize = onResize;\n\n      // 延迟渲染\n      setTimeout(function () {\n        onResize();\n        render();\n      }, 10);\n    })(document.getElementById('pinkboard'));\n\n  },\n  computed: {\n\n  },\n\n  methods: {\n  }\n\n}\n\n</script>\n<style lang=\"less\"  rel=\"stylesheet/less\" scope type=\"text/less\">\n@r: 100;\n.my-index {\n}\n</style>"]}]}