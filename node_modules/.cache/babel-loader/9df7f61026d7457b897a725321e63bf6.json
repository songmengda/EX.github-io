{"remainingRequest":"/Users/songmengda/Desktop/my/mygithub/yudi-canvas/yudi-canvas/node_modules/babel-loader/lib/index.js!/Users/songmengda/Desktop/my/mygithub/yudi-canvas/yudi-canvas/node_modules/eslint-loader/index.js??ref--13-0!/Users/songmengda/Desktop/my/mygithub/yudi-canvas/yudi-canvas/src/common/fetch.js","dependencies":[{"path":"/Users/songmengda/Desktop/my/mygithub/yudi-canvas/yudi-canvas/src/common/fetch.js","mtime":1556528674171},{"path":"/Users/songmengda/Desktop/my/mygithub/yudi-canvas/yudi-canvas/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songmengda/Desktop/my/mygithub/yudi-canvas/yudi-canvas/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/songmengda/Desktop/my/mygithub/yudi-canvas/yudi-canvas/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/songmengda/Desktop/my/mygithub/yudi-canvas/yudi-canvas/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n\n/**\n * 封装promise请求对象\n */\nimport axios from 'axios';\nimport { BASE_URL } from \"../api\";\nexport default function fetch() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'get';\n  method = method.toLowerCase();\n  var ops = {\n    params: data\n  };\n\n  if (method === 'post') {\n    ops = {\n      data: data\n    };\n  }\n\n  var options = _objectSpread({\n    url: url\n  }, ops, {\n    method: method\n  });\n\n  return new Promise(function (resolve, reject) {\n    var instance = axios.create({\n      baseURL: BASE_URL,\n      timeout: 100000,\n      withCredentials: true,\n      crossDomain: true // headers: { 'Content-Type': 'application/json;charset=UTF-8' }\n      // headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n\n    }); // 不论返回的success是true还是false，都进resolve，后续逻辑前端处理\n\n    instance(options).then(function (_ref) {\n      var data = _ref.data;\n      resolve(data);\n    }).catch(function () {\n      resolve(data);\n      window.console.log(reject);\n    });\n  });\n}",{"version":3,"sources":["/Users/songmengda/Desktop/my/mygithub/yudi-canvas/yudi-canvas/src/common/fetch.js"],"names":["axios","BASE_URL","fetch","url","data","method","toLowerCase","ops","params","options","Promise","resolve","reject","instance","create","baseURL","timeout","withCredentials","crossDomain","then","catch","window","console","log"],"mappings":";;AAAA;;;AAIA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT;AAEA,eAAe,SAASC,KAAT,GAAqD;AAAA,MAArCC,GAAqC,uEAA/B,EAA+B;AAAA,MAA3BC,IAA2B,uEAApB,EAAoB;AAAA,MAAhBC,MAAgB,uEAAP,KAAO;AAClEA,EAAAA,MAAM,GAAGA,MAAM,CAACC,WAAP,EAAT;AACA,MAAIC,GAAG,GAAG;AAAEC,IAAAA,MAAM,EAAEJ;AAAV,GAAV;;AACA,MAAIC,MAAM,KAAK,MAAf,EAAuB;AACrBE,IAAAA,GAAG,GAAG;AAAEH,MAAAA,IAAI,EAAEA;AAAR,KAAN;AACD;;AACD,MAAIK,OAAO;AACTN,IAAAA,GAAG,EAAHA;AADS,KAENI,GAFM;AAGTF,IAAAA,MAAM,EAANA;AAHS,IAAX;;AAKA,SAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,QAAQ,GAAGb,KAAK,CAACc,MAAN,CAAa;AAC5BC,MAAAA,OAAO,EAAEd,QADmB;AAE5Be,MAAAA,OAAO,EAAE,MAFmB;AAG5BC,MAAAA,eAAe,EAAE,IAHW;AAI5BC,MAAAA,WAAW,EAAE,IAJe,CAK5B;AACA;;AAN4B,KAAb,CAAjB,CADsC,CAStC;;AACAL,IAAAA,QAAQ,CAACJ,OAAD,CAAR,CAAkBU,IAAlB,CAAuB,gBAAc;AAAA,UAAXf,IAAW,QAAXA,IAAW;AACnCO,MAAAA,OAAO,CAACP,IAAD,CAAP;AACD,KAFD,EAEGgB,KAFH,CAES,YAAM;AACbT,MAAAA,OAAO,CAACP,IAAD,CAAP;AACAiB,MAAAA,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmBX,MAAnB;AACD,KALD;AAMD,GAhBM,CAAP;AAiBD","sourcesContent":["/**\n * 封装promise请求对象\n */\n\nimport axios from 'axios'\nimport { BASE_URL } from '../api'\n\nexport default function fetch (url = '', data = {}, method = 'get') {\n  method = method.toLowerCase()\n  let ops = { params: data }\n  if (method === 'post') {\n    ops = { data: data }\n  }\n  let options = {\n    url,\n    ...ops,\n    method\n  }\n  return new Promise((resolve, reject) => {\n    const instance = axios.create({\n      baseURL: BASE_URL,\n      timeout: 100000,\n      withCredentials: true,\n      crossDomain: true\n      // headers: { 'Content-Type': 'application/json;charset=UTF-8' }\n      // headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n    })\n    // 不论返回的success是true还是false，都进resolve，后续逻辑前端处理\n    instance(options).then(({ data }) => {\n      resolve(data)\n    }).catch(() => {\n      resolve(data)\n      window.console.log(reject)\n    })\n  })\n}"]}]}